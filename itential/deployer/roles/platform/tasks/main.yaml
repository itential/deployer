# Copyright (c) 2022, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Validate vars
  ansible.builtin.include_tasks:
    file: validate-vars.yml

- name: Determine release vars
  ansible.builtin.include_tasks:
    file: determine-release-vars.yml

- name: Include base OS updates
  ansible.builtin.include_role:
    name: os

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Install Platform dependent packages
  ansible.builtin.yum:
    name: "{{ platform_packages }}"
    state: present

# Install the mongodb repo if mongodb is not already installed. The platform role
# will need mongo cmd line tools to import some initial data. It does not install
# the database, just the cmd line tools and the mongo shell.
- name: Install mongodb repo (for cmd line tools)
  when: configure_iap | bool
  ansible.builtin.yum_repository:
    name: "mongodb"
    description: MongoDB Repository
    baseurl: "{{ mongodb_release_url[ansible_distribution_major_version] }}"
    enabled: true
    gpgcheck: true
    gpgkey: "{{ mongodb_gpgkey_url[ansible_distribution_major_version] }}"

# Install mongodb tools if they are not already installed
- name: Install the MongoDB tools packages
  when: configure_iap | bool
  ansible.builtin.yum:
    name: "{{ mongodb_tools_packages[ansible_distribution_major_version] }}"
    state: present

- name: Install nodejs
  ansible.builtin.include_tasks:
    file: install-nodejs.yml

- name: Install python
  ansible.builtin.include_tasks:
    file: install-python.yml

- name: Install textfsm
  ansible.builtin.include_tasks:
    file: install-textfsm.yml

- name: Install jinja2
  ansible.builtin.include_tasks:
    file: install-jinja2.yml

- name: Create itential user
  ansible.builtin.include_tasks:
    file: create-itential-user.yml

- name: Create itential directories
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: "{{ iap_user }}"
    group: "{{ iap_group }}"
    mode: "0775"
  with_items:
    - "{{ iap_install_dir }}"
    - "{{ iap_install_dir }}/keys"
    - "{{ iap_install_dir }}/automation"
    - "{{ iap_install_dir }}/automation/public"
    - "{{ iap_log_dir }}"
    - "{{ iap_log_dir }}/automation"

- name: Ensure secure mode for TemplateBuilder
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    insertafter: EOF
    state: present
    line: "{{ iap_user }} ALL=(ALL) NOPASSWD: /usr/sbin/chroot, /sbin/chroot"

- name: Install Platform
  ansible.builtin.include_tasks:
    file: install-platform.yml

- name: Create properties.json file
  ansible.builtin.include_tasks:
    file: create-properties-file.yml

- name: Make the "custom" directories
  ansible.builtin.file:
    name: "{{ item }}"
    state: directory
    owner: "{{ iap_user }}"
    group: "{{ iap_group }}"
    mode: "0775"
  with_items:
    - "{{ iap_install_dir }}/current/custom/@itential"
    - "{{ iap_install_dir }}/current/custom/@itentialopensource"

- name: Copy certs
  ansible.builtin.include_tasks:
    file: copy-certs.yml

- name: Configure firewalld
  ansible.builtin.include_tasks:
    file: configure-firewalld.yml

- name: Configure vault
  ansible.builtin.include_tasks:
    file: configure-vault.yml
  when: configure_vault | bool

- name: Set file ownership and permissions
  ansible.builtin.include_tasks:
    file: set-file-ownership.yml

- name: Initialize MongoDB with IAP data
  ansible.builtin.include_tasks:
    file: mongo-init.yml
  when: configure_iap | bool

- name: Enable and start IAP
  ansible.builtin.systemd:
    name: automation-platform
    enabled: yes
    state: restarted
