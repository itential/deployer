# Copyright (c) 2022, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)
---
- name: Create ssl directory
  ansible.builtin.file:
    path: "{{ rabbit_ssl_dir }}"
    state: directory
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0755"

- name: Copy Server Certificate
  ansible.builtin.copy:
    src: "files/rabbitmq/{{ rabbitmq_server_cert_source }}"
    dest: "{{ rabbit_ssl_dir }}/{{ rabbitmq_server_cert_source }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0660"

- name: Copy Server Key
  ansible.builtin.copy:
    src: "files/rabbitmq/{{ rabbitmq_server_key_source }}"
    dest: "{{ rabbit_ssl_dir }}/{{ rabbitmq_server_key_source }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0660"

- name: Copy CA Certificate
  ansible.builtin.copy:
    src: "files/rabbitmq/{{ rabbitmq_root_ca_file_source }}"
    dest: "{{ rabbit_ssl_dir }}/{{ rabbitmq_root_ca_file_source }}"
    owner: "{{ rabbitmq_owner }}"
    group: "{{ rabbitmq_group }}"
    mode: "0660"

- name: Uncomment lines in rabbit config to enable SSL
  ansible.builtin.lineinfile:
    path: "{{ rabbitmq_config }}"
    regexp: ^#\s({{ item }}.*)$
    line: '\1'
    backrefs: true
    firstmatch: true
  with_items:
    - listeners.tcp = none
    - listeners.ssl.default
    - listeners.ssl.1
    - listeners.ssl.2
    - ssl_options.cacertfile
    - ssl_options.certfile
    - ssl_options.keyfile
    - ssl_options.verify
    - ssl_options.fail_if_no_peer_cert
    - ssl_options.password
    - management.ssl.port
    - management.ssl.cacertfile
    - management.ssl.certfile
    - management.ssl.keyfile
    - management.ssl.password

- name: Comment lines in rabbit config to disable non-SSL
  ansible.builtin.lineinfile:
    path: "{{ rabbitmq_config }}"
    regexp: ^({{ item }}.*)$
    line: '# \1'
    backrefs: true
    firstmatch: true
  with_items:
    - listeners.tcp.local
    - listeners.tcp.local_v6
    - listeners.tcp.other_ip

# Check if firewalld is running, if it is then open the appropriate ports
- name: Gather service facts
  ansible.builtin.service_facts:

- name: Open Port on FirewallD Public Zone
  ansible.posix.firewalld:
    port: "{{ rabbit_ssl_port }}/tcp"
    permanent: yes
    state: enabled
    zone: public
    immediate: yes
  when:
    - ansible_facts.services["firewalld.service"] is defined
    - (ansible_facts.services["firewalld.service"].state == "running")
    - (ansible_facts.services["firewalld.service"].status == "enabled")
  ignore_errors: true

- name: Restart rabbitmq
  ansible.builtin.systemd:
    name: rabbitmq-server
    enabled: yes
    state: restarted
