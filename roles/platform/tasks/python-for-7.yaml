# Copyright (c) 2022, Itential, LLC
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Make temp working directory
  ansible.builtin.tempfile:
    state: directory
  register: workingdir

- name: Check if openssl is already installed
  ansible.builtin.stat:
    path: "/usr/local/ssl"
  register: openssl_installed

- name: Install openssl
  when: not openssl_installed.stat.exists
  block:
    - name: Download openssl Source
      ansible.builtin.get_url:
        url: "{{ iap_openssl_url }}"
        dest: "{{ workingdir.path }}/{{ iap_openssl_url | basename }}"
        mode: "0755"
        validate_certs: false

    - name: Get openssl Source
      ansible.builtin.unarchive:
        src: "{{ workingdir.path }}/{{ iap_openssl_url | basename }}"
        dest: "{{ workingdir.path }}"
        remote_src: true

    - name: Configure and build openssl
      ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "{{ workingdir.path }}/{{ iap_openssl_url.split('/')[-1].replace('.tar.gz', '') }}"
      with_items:
        - ./config
        - make
        - make install
      changed_when: true

- name: Check if Python is already installed
  ansible.builtin.stat:
    path: "/usr/local/bin/python3"
  register: python_installed

- name: Install Python
  when: not python_installed.stat.exists
  block:
    - name: Download Python Source
      ansible.builtin.get_url:
        url: "{{ iap_python_src_url }}"
        dest: "{{ workingdir.path }}/{{ iap_python_src_url | basename }}"
        mode: "0755"

    - name: Unzip downloaded python source code
      ansible.builtin.unarchive:
        src: "{{ workingdir.path }}/{{ iap_python_src_url | basename }}"
        dest: "{{ workingdir.path }}"
        remote_src: true

    # Modify many lines on the config file for the SSL settings
    - name: Modify SSL setup lines (1)
      ansible.builtin.lineinfile:
        path: "{{ workingdir.path }}/Python-{{ iap_python_version[ansible_distribution_major_version] }}/Modules/Setup"
        regexp: ^#SSL=/usr/local/ssl$
        line: "SSL=/usr/local/ssl"
        insertafter: ^#SSL=/usr/local/ssl$
        firstmatch: true

    - name: Modify SSL setup lines (2)
      ansible.builtin.lineinfile:
        path: "{{ workingdir.path }}/Python-{{ iap_python_version[ansible_distribution_major_version] }}/Modules/Setup"
        line: "_ssl _ssl.c -DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl -L$(SSL)/lib -lssl -lcrypto"
        insertafter: ^SSL=/usr/local/ssl$
        firstmatch: true

    - name: Configure and install Python from source
      ansible.builtin.command:
        cmd: "{{ item }}"
        chdir: "{{ workingdir.path }}/Python-{{ iap_python_version[ansible_distribution_major_version] }}"
      with_items:
        - ./configure --enable-optimizations --with-openssl=/usr/local/ssl
        - make altinstall
      changed_when: true

    - name: Create Python symlinks
      ansible.builtin.import_role:
        name: common
        tasks_from: create-python39-symlinks

- name: Remove temp working directory
  ansible.builtin.file:
    path: "{{ workingdir.path }}"
    state: absent
